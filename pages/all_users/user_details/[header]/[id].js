import React, { useEffect, useState } from 'react';
import Layout from '../../../../components/Layout';
import Head from 'next/head';

import UserInformation from '../../../../components/user/UserInformation';
import AllBookings from '../../../../components/user/AllBookings';
import Cancelled from '../../../../components/user/Cancelled';
import AllTransactions from '../../../../components/user/AllTransactions'
import Dispute from '../../../../components/user/Dispute'
import AcitveBooking from '../../../../components/user/ActiveBooking';
import Reviews from '../../../../components/user/Reviews';
import API from '../../../../utilis/API';
import getHeader from '../../../../utilis/getHeader';

const index = (props) => {
    const [isOpen, setIsOpen] = useState(false)
    const [selectedTab, setSelectedTab] = useState({});
    const [userInfo, setUserInfo] = useState(null);

    useEffect(() => {
        setUserInfo(props?.data?.body?.user_information)
    }, [props])


    useEffect(() => {
        setSelectedTab({
            id: 1,
            name: 'User Information'
        })
    }, [])
    const tabs = [
        {
            id: 1,
            name: 'User Information'
        },
        {
            id: 2,
            name: 'All Bookings'
        },
        {
            id: 3,
            name: 'Active Booking'
        },
        {
            id: 4,
            name: 'Cancelled'
        },
        // {
        //     id: 5,
        //     name: 'All Transactions'
        // },
        {
            id: 6,
            name: 'Reviews'
        },
        {
            id: 7,
            name: 'Dispute'
        },
    ]
    return (
        <>
            <Head>
                <title>Villa details</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout title="User Details">
                <section className='mt-5 mb-16'>
                    <div className='flex gap-x-5 items-center'>
                        {userInfo?.profile_image ? (
                            <img src='/img/profile.jpg' alt='' className='w-[98px] h-[98px] object-cover rounded-full' />
                        ) : (
                            <div src='/img/profile.jpg' alt='' className='w-[98px] h-[98px] rounded-full bg-primary/30 flex justify-center items-center text-xl font-semibold text-darkBlack'>{userInfo?.name.charAt(0)}</div>
                        )}
                        <div>
                            <h5 className='text-lg font-medium text-[#636363]'>{userInfo?.name}</h5>
                            <p className='text-sm text-black'>User ID: {userInfo?.id}</p>
                            <div className='flex items-center gap-x-3'>
                                <p className='text-lightGray text-sm py-1 font-sans'>Joining Date</p>
                                <p className='text-sm text-[#4E4E4E]'>{userInfo?.joining_date}</p>
                            </div>
                        </div>
                    </div>
                </section>
                <section className='min-h-[450px]'>
                    <div className='w-full h-[50px] bg-primaryLight rounded-lg my-7 flex justify-between'>
                        {tabs.map((tab, index) => (
                            <button
                                className={`px-7 h-full rounded-lg text-primary text-xs font-medium transition-colors duration-300 ${selectedTab.id === tab?.id && "text-white bg-primary"}`}
                                onClick={() => setSelectedTab(tab)}
                            >{tab?.name}</button>
                        ))}
                    </div>
                    {selectedTab?.name === "User Information" && (
                        <UserInformation
                            data={props?.data?.body?.user_information}
                        />
                    )}
                    {selectedTab?.name === "Active Booking" && (
                        <AcitveBooking
                            data={props?.data?.body?.active_bookings}
                        />
                    )}
                    {selectedTab?.name === "All Bookings" && (
                        <AllBookings
                            data={props?.data?.body?.all_bookings}
                        />
                    )}
                    {selectedTab?.name === "Cancelled" && (
                        <Cancelled
                            data={props?.data?.body?.cancel_bookings}
                        />
                    )}
                    {selectedTab?.name === "All Transactions" && (
                        <AllTransactions
                            data={props?.data?.body?.all_bookings}
                        />
                    )}
                    {selectedTab?.name === "Reviews" && (
                        <Reviews
                            data={props?.data?.body?.reviews}
                        />
                    )}
                    {selectedTab?.name === "Dispute" && (
                        <Dispute
                            data={props?.data?.body?.disputes}
                        />
                    )}
                </section>

            </Layout>
        </>
    )
}


const loadUserDetails = async ({ id, header }) => {
    const h = {
        headers: {
            'Authorization': header,
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        }
    }
    const { data } = await API.get(`Dashboard/users/detail/${id}`, h)

    return data
}

export async function getServerSideProps(context) {


    let userDetailsData = await loadUserDetails(context?.query)

    return {
        props: {
            data: userDetailsData
        }
    }
}


export default index