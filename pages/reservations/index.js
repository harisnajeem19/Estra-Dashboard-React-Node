import React, { useState, useEffect } from 'react';
import Layout from '../../components/Layout';
import Head from 'next/head';
import { LineChart, YAxis, XAxis, CartesianGrid, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';
import Link from 'next/link';
import getHeader from '../../utilis/getHeader';
import API from '../../utilis/API';
import Loader from '../../components/Loader';
import PaginationElement from '../../components/PaginationElement';
import Modal from '../../components/Modal/index';
import { toast } from 'react-toastify';
import Search from '../../components/SVGs/Search';

const Index = () => {


    const [loading, setloading] = useState(false);
    const [isOpen, setIsOpen] = useState(false);
    const [selectedVilla, setSelectedVilla] = useState(null);
    const [search, setSearch] = useState('');
    const [cardsdata, setCardsData] = useState([
        {
            title: 'New Reservations',
            value: '__',
            percentageValue: '5.25%'
        },
        {
            title: 'All Reservations',
            value: '__',
            percentageValue: '__'
        },
        {
            title: 'Pendings',
            value: '__',
            percentageValue: ''
        },
    ]);
    const [villasGraphData, setvillasGraphData] = useState([]);
    const [totalVillas, settotalVillas] = useState('');
    const [reservationTableData, setReservationTableData] = useState([]);

    // For pagination
    const [pageNumber, setPageNumber] = useState(1)
    const [from, setFrom] = useState();
    const [total, setTotal] = useState();
    const [lastPage, setLastPage] = useState();

    const loadReservationsData = async () => {
        setloading(true)
        try {
            const header = getHeader()
            const { data } = await API.get(`Dashboard/reservations/all/${search}?page=${pageNumber}`, header)

            settotalVillas(data?.body?.total_villas)
            setCardsData([
                {
                    title: 'New Reservations',
                    value: data?.body?.new_reservations,
                    percentageValue: data?.body?.new_reservation_percentage + '%'
                },
                {
                    title: 'All Reservations',
                    value: data?.body?.all_reservations,
                    percentageValue: data?.body?.all_reservation_percentage
                },
                {
                    title: 'Pendings',
                    value: data?.body?.pending,
                    percentageValue: ''
                },
            ])
            setReservationTableData(data?.body?.reservation_list?.data)


            if (Array.isArray(data?.body?.villas_graph)) {
                let temp = data?.body?.villas_graph?.map(item => {
                    return {
                        "name": item?.date,
                        "pv": item?.total_villas,
                        "amt": 2400
                    }
                })
                setvillasGraphData(temp)
            }

            setFrom(data?.body?.reservation_list?.from);
            setTotal(data?.body?.reservation_list?.total);
            setLastPage(data?.body?.reservation_list?.last_page);

            setloading(false)
        } catch (error) {
            console.log(error)
            setloading(false)
        }
    }

    // Change payment status to paid
    const changePaymentStatus = async () => {
        setloading(true)

        const header = getHeader()

        try {
            const { data } = await API.get(`Dashboard/reservation/change/payment/status/${selectedVilla}`, header)
            console.log(data);

            if (data?.body?.message) {
                toast(data?.body?.message)
                loadReservationsData();


            } else if (data?.success == false) {
                toast.error(data?.error)

            }
            setIsOpen(false)
            setSelectedVilla(null)
            setloading(false)

        } catch (error) {
            setloading(false)
            console.log(error);
        }
    }

    useEffect(() => {
        loadReservationsData()
    }, [pageNumber, search]);

    return (
        <>
            <Head>
                <title>Esterahy - Reservation</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout title="Brief Reservations" slug="Explore all villa reservations here">
                <section className='mt-5'>
                    <div className='flex gap-x-12 items-center'>
                        <p className='text-lg text-black'>Explore</p>
                        <div className='w-[448px] h-[48px] rounded-3xl border overflow-hidden flex justify-between'>
                            <input
                                type="text"
                                placeholder='Search reservation by name or ID'
                                className='font-sans text-base text-lightGray h-full pl-5 flex-1 placeholder:font-light'
                                value={search}
                                onChange={(e) => setSearch(e.target.value)}
                            />
                            <button className='w-[90px] h-[48px] rounded-3xl bg-primary flex justify-center items-center'>
                                <Search />
                            </button>
                        </div>
                    </div>
                </section>
                <div className='pt-[30px]'>
                    <div className='grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-x-[10px] gap-y-[13px] mt-[28px]  border-b-2 pb-10'>
                        {
                            cardsdata.map((item, index) => {
                                return (
                                    <div
                                        key={index + ''}
                                        className='flex flex-col pt-[10px] md:pt-[22px] pb-[14px] md:pb-[28px] bg-white rounded-lg pl-[15px] md:pl-[25px]'
                                        style={{
                                            'boxShadow': '0px 0px 20px #D7DEE365'
                                        }}
                                    >
                                        <h1 className='text-[#2E3039] text-[20px]'>{item?.title}</h1>
                                        <h1 className={`${index == 4 ? "text-[#F52D56]" : "text-[#242E42]"}
                                                 text-[24px] font-semibold mt-2 md:mt-[13px]` }>{item?.value}</h1>
                                        {index !== 2 && <>
                                            <div className='flex flex-row items-center  mt-2 md:mt-[18px] space-x-1'>
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                    fill={index < 2 ? "#03DE73" : "#F52D56"}
                                                    className="w-3 h-3">
                                                    <path
                                                        fill-rule="evenodd"
                                                        d="M12 2.25a.75.75 0 01.75.75v16.19l6.22-6.22a.75.75 0 111.06 1.06l-7.5 7.5a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 111.06-1.06l6.22 6.22V3a.75.75 0 01.75-.75z" clip-rule="evenodd" />
                                                </svg>
                                                <h1 className={`${index < 2 ? "text-[#03DE73]" : "text-[#F52D56]"} text-sm `}>{item.percentageValue}</h1>
                                            </div>
                                            <h1 className='text-[#54617A] text-xs mt-[7px] opacity-50'>Since last month</h1>
                                        </>
                                        }
                                    </div>
                                )
                            })
                        }
                        <div
                            key={"6"}
                            className='flex flex-row flex-wrap sm:flex-nowrap items-start pt-[10px] md:pt-[22px] pb-[14px] md:pb-[28px] bg-white 
                                        rounded-lg px-[15px] md:px-[25px]  col-span-1 md:col-span-2 space-x-4'
                            style={{
                                'boxShadow': '0px 0px 20px #D7DEE365'
                            }}
                        >   <div className=''>
                                <h1 className='text-[#2E3039] text-[20px] font-roboto font-light'>{'Total villas'}</h1>
                                <h1 className={`text-[#242E42] text-[24px] font-semibold mt-2 md:mt-[13px]`}>{totalVillas}</h1>
                            </div>
                            <div className='flex-1 relative h-20'>
                                <ResponsiveContainer>
                                    <LineChart
                                        data={villasGraphData}
                                        width='100%'
                                    >

                                        <Line
                                            type="monotone"
                                            dataKey="pv"
                                            stroke="#61DD9F"
                                            strokeWidth={2.5}
                                            dot={false}
                                        />

                                    </LineChart>
                                </ResponsiveContainer>

                            </div>
                        </div>
                    </div>
                </div>
                <div className='pt-[30px]'>
                    {/* Heading start */}
                    <div className='flex flex-row items-center justify-between'>
                        <div className='flex space-x-[35px] items-center'>
                            <h1 className='text-xl font-medium text-misDarkBlack'>New Reservations</h1>

                        </div>
                        <Link href="/reservations/all_reservations">
                            <button className='w-[150px] h-[42px] bg-primary rounded-xl font-light text-white text-sm'>All Reservations</button>
                        </Link>
                    </div>
                    {/* Table start */}
                    <div
                        className='bg-white py-[22px] mt-[28px] rounded-[8px] relative mb-10'
                        style={{
                            'boxShadow': '0px 0px 20px #D7DEE365'
                        }}
                    >
                        <div className='flex flex-row items-center justify-between px-[25px]'>
                            <h1 className='font-medium text-[20px] text-[#2E3039]'>New Reservations</h1>
                            <Link href="/reservations/cancelled_reservation">
                                <h1 className='font-roboto text-[#08488C] text-sm cursor-pointer'>Go to Cancelled Reservation</h1>
                            </Link>
                        </div>
                        <div className='mt-[20px] overflow-x-auto'>
                            <table className='table-fixed w-[750px] md:w-full'>
                                <thead >
                                    <tr className='bg-[#08488C]'>
                                        <th className='py-[11px] text-xs text-white font-light text-start  pl-[36px] w-[200px]'>VILLA NAME</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start'>CUSTOMER ID</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start w-[100px]'>CITY</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start'>DATE</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start'>AMOUNT</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start'>STATUS</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start'>PAYMENT STATUS</th>
                                        <th className='py-[11px] text-xs text-white font-light text-start pl-8'>ACTION</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {reservationTableData?.map((item, index) => {
                                        return (

                                            <tr
                                                key={index + ''}
                                                className='border-b last:border-b-0 border-[#EFF3F9] cursor-pointer'>
                                                <td className=' pl-[36px] py-[24px] text-[#54617A]  text-sm font-roboto '>{item?.villa_name}</td>
                                                <td className='py-[24px] text-[#54617A] font-roboto text-sm'>{item?.customer_id}</td>
                                                <td className='py-[24px] text-[#54617A] font-roboto text-sm '>{item?.city}</td>
                                                <td className='py-[24px] text-[#54617A] font-roboto text-sm'>{item?.date}</td>
                                                <td className='py-[24px] text-black font-roboto text-sm'>SR <span>{item?.amount}</span></td>
                                                <td className={`py-[24px] font-medium font-roboto text-sm ${item?.status == "Confirmed" ? "text-green-500" : item?.status == "Pending" ? "text-yellow-500" : "text-red-500"}`}>{item?.status}</td>
                                                <td className={`py-[24px] flex items-center gap-x-3`}>
                                                    <span className={`font-medium font-roboto text-sm ${item?.payment_paid_to_vendor == "yes" ? "text-green-500" : "text-red-500"}`}>{item?.payment_paid_to_vendor == "yes" ? "Paid" : "Unpaid"}</span>
                                                    {item?.payment_paid_to_vendor == "no" && item?.status == "Confirmed" ? (
                                                        <button
                                                            className='text-[10px] text-primary underline px-3 py-1 rounded-[5px] font-semibold'
                                                            onClick={() => {
                                                                setSelectedVilla(item?.id)
                                                                setIsOpen(true)
                                                            }}
                                                        >Change to Paid</button>
                                                    ) : (null)}
                                                </td>
                                                <Link href={`/reservations/${[item?.id]}`}>
                                                    <td
                                                        className='  py-[24px] text-[#54617A] font-roboto text-sm cursor-pointer pl-8'
                                                    >
                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                            fill="none"
                                                            viewBox="0 0 24 24"
                                                            stroke-width="1.5"
                                                            stroke="#08488C"
                                                            class="w-6 h-6">
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
                                                        </svg>
                                                    </td>
                                                </Link>
                                            </tr>
                                        )
                                    })}
                                </tbody>
                            </table>
                        </div>
                        {/* Pagination */}
                        <PaginationElement
                            currentPage={pageNumber}
                            callBack={(currentPage) => { setPageNumber(currentPage) }}
                            totalPages={lastPage}
                        />
                    </div>
                    {/* Table end */}
                </div>
            </Layout>
            {loading && <Loader />}
            <Modal isOpen={isOpen} setIsOpen={setIsOpen} className="py-20 w-full lg:w-[837px]">
                <div className='w-full sm:w-[450px] mx-auto flex flex-col justify-center items-center'>
                    <img src='/img/payment.svg' alt='Success' className='w-[100px]' />
                    <h1 className='font-semibold text-[22px] sm:text-[32px] text-primary mt-7 text-center'>Are you sure you want to change payment status to Paid?</h1>
                    <p className='text-center text-[#5C5C5C] text-base mt-5'></p>
                    <div className='text-center mt-12 flex gap-10'>
                        <button className='sm:w-[199px] px-7 h-[50px] sm:h-[59px] text-white text-sm sm:text-lg font-light rounded-xl bg-[#474747]'
                            onClick={() => setIsOpen(false)}
                        >Cancel</button>
                        <button className='sm:w-[199px] h-[50px] sm:h-[59px] text-white text-sm sm:text-lg font-light rounded-xl bg-[#F52D56] px-7'
                            onClick={() => {
                                changePaymentStatus()
                            }}
                        >Confirm</button>
                    </div>
                </div>
            </Modal>
        </>
    );
}

export default Index;
